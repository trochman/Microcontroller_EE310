

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 29 23:50:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	_main_text,global,ovrld,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=4,class=CODE,delta=1
    16                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   004256                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _LED_value
    62   004256  3F                 	db	63
    63   004257  06                 	db	6
    64   004258  5B                 	db	91
    65   004259  4F                 	db	79
    66   00425A  66                 	db	102
    67   00425B  6D                 	db	109
    68   00425C  7D                 	db	125
    69   00425D  07                 	db	7
    70   00425E  7F                 	db	127
    71   00425F  6F                 	db	111
    72                           
    73                           ;initializer for _secretcode2
    74   004260  0001               	dw	1
    75                           
    76                           ;initializer for _secretcode1
    77   004262  0001               	dw	1
    78                           
    79                           	psect	nvCOMRAM
    80   000027                     __pnvCOMRAM:
    81                           	callstack 0
    82   000027                     _value1:
    83                           	callstack 0
    84   000027                     	ds	2
    85   000000                     _PORTAbits	set	16330
    86   000000                     _PORTBbits	set	16331
    87   000000                     _IPR1bits	set	14721
    88   000000                     _ANSELA	set	14912
    89   000000                     _PORTA	set	16330
    90   000000                     _PORTD	set	16333
    91   000000                     _PORTB	set	16331
    92   000000                     _ANSELB	set	14928
    93   000000                     _LATA	set	16314
    94   000000                     _LATD	set	16317
    95   000000                     _LATB	set	16315
    96   000000                     _TRISA	set	16322
    97   000000                     _TRISD	set	16325
    98   000000                     _TRISB	set	16323
    99   000000                     _ANSELD	set	14960
   100   000000                     _WPUB	set	14929
   101   000000                     _INTCON0	set	16338
   102   000000                     _PIE1bits	set	14737
   103   000000                     _PIR1bits	set	14753
   104   000000                     _IVTBASEL	set	16341
   105   000000                     _IVTBASEH	set	16342
   106   000000                     _IVTBASEU	set	16343
   107                           
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111   0041E2                     __pcinit:
   112                           	callstack 0
   113   0041E2                     start_initialization:
   114                           	callstack 0
   115   0041E2                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (14 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120   0041E2  0E56               	movlw	low __pidataCOMRAM
   121   0041E4  6EF6               	movwf	tblptrl,c
   122   0041E6  0E42               	movlw	high __pidataCOMRAM
   123   0041E8  6EF7               	movwf	tblptrh,c
   124   0041EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125   0041EC  6EF8               	movwf	tblptru,c
   126   0041EE  EE00  F013         	lfsr	0,__pdataCOMRAM
   127   0041F2  EE10 F00E          	lfsr	1,14
   128   0041F6                     copy_data0:
   129   0041F6  0009               	tblrd		*+
   130   0041F8  006F FFD7 FFEE     	movff	tablat,postinc0
   131   0041FE  50E5               	movf	postdec1,w,c
   132   004200  50E1               	movf	fsr1l,w,c
   133   004202  E1F9               	bnz	copy_data0
   134                           
   135                           ; Clear objects allocated to COMRAM (6 bytes)
   136   004204  6A26               	clrf	(__pbssCOMRAM+5)& (0+255),c
   137   004206  6A25               	clrf	(__pbssCOMRAM+4)& (0+255),c
   138   004208  6A24               	clrf	(__pbssCOMRAM+3)& (0+255),c
   139   00420A  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
   140   00420C  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   141   00420E  6A21               	clrf	__pbssCOMRAM& (0+255),c
   142                           
   143                           ;
   144                           ; Setup IVTBASE
   145                           ;
   146   004210  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   147   004212  6ED5               	movwf	213,c
   148   004214  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   149   004216  6ED6               	movwf	214,c
   150   004218  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   151   00421A  6ED7               	movwf	215,c
   152   00421C                     end_of_initialization:
   153                           	callstack 0
   154   00421C                     __end_of__initialization:
   155                           	callstack 0
   156   00421C  0100               	movlb	0
   157   00421E  EF48  F000         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   000021                     __pbssCOMRAM:
   161                           	callstack 0
   162   000021                     _value2:
   163                           	callstack 0
   164   000021                     	ds	2
   165   000023                     _tempval:
   166                           	callstack 0
   167   000023                     	ds	2
   168   000025                     _temp:
   169                           	callstack 0
   170   000025                     	ds	2
   171                           
   172                           	psect	dataCOMRAM
   173   000013                     __pdataCOMRAM:
   174                           	callstack 0
   175   000013                     _LED_value:
   176                           	callstack 0
   177   000013                     	ds	10
   178   00001D                     _secretcode2:
   179                           	callstack 0
   180   00001D                     	ds	2
   181   00001F                     _secretcode1:
   182                           	callstack 0
   183   00001F                     	ds	2
   184                           
   185                           	psect	cstackCOMRAM
   186   000001                     __pcstackCOMRAM:
   187                           	callstack 0
   188   000001                     ??_interrupt1_ISR:
   189   000001                     
   190                           ; 1 bytes @ 0x0
   191   000001                     	ds	2
   192   000003                     Display_Value@display_input:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196   000003                     	ds	2
   197   000005                     ?_Get_Value:
   198                           	callstack 0
   199   000005                     Get_Value@input:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x4
   203   000005                     	ds	2
   204   000007                     ??_Get_Value:
   205                           
   206                           ; 1 bytes @ 0x6
   207   000007                     	ds	2
   208   000009                     Get_Value@temp1:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x8
   212   000009                     	ds	2
   213   00000B                     Get_Value@temp2:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0xA
   217   00000B                     	ds	2
   218   00000D                     ??_main:
   219                           
   220                           ; 1 bytes @ 0xC
   221   00000D                     	ds	2
   222   00000F                     main@count:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0xE
   226   00000F                     	ds	2
   227   000011                     main@count_224:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x10
   231   000011                     	ds	2
   232                           
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 42 in file "Interfacing_Sensors.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  count           2   16[COMRAM] int 
   243 ;;  count           2   14[COMRAM] int 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   257 ;;Total ram usage:        6 bytes
   258 ;; Hardware stack levels required when called: 3
   259 ;; This function calls:
   260 ;;		_Display_Value
   261 ;;		_Get_Value
   262 ;;		_Init
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	_main_text
   269   000090                     __p_main_text:
   270                           	callstack 0
   271   000090                     _main:
   272                           	callstack 28
   273                           
   274                           ;incstack = 0
   275   000090                     
   276                           ;Interfacing_Sensors.c: 44:     Init();
   277   000090  ECC5  F020         	call	_Init	;wreg free
   278   000094                     
   279                           ;Interfacing_Sensors.c: 46:     value1 = Get_Value(tempval);
   280   000094  C023  F005         	movff	_tempval,Get_Value@input
   281   000098  C024  F006         	movff	_tempval+1,Get_Value@input+1
   282   00009C  EC59  F020         	call	_Get_Value	;wreg free
   283   0000A0  C005  F027         	movff	?_Get_Value,_value1
   284   0000A4  C006  F028         	movff	?_Get_Value+1,_value1+1
   285   0000A8                     
   286                           ;Interfacing_Sensors.c: 47:     tempval++;
   287   0000A8  4A23               	infsnz	_tempval^0,f,c
   288   0000AA  2A24               	incf	(_tempval+1)^0,f,c
   289   0000AC                     
   290                           ;Interfacing_Sensors.c: 48:     Display_Value(value1);
   291   0000AC  C027  F003         	movff	_value1,Display_Value@display_input
   292   0000B0  C028  F004         	movff	_value1+1,Display_Value@display_input+1
   293   0000B4  EC32  F021         	call	_Display_Value	;wreg free
   294   0000B8                     
   295                           ;Interfacing_Sensors.c: 49:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   296   0000B8  0E0B               	movlw	11
   297   0000BA  6E0E               	movwf	(??_main+1)^0,c
   298   0000BC  0E26               	movlw	38
   299   0000BE  6E0D               	movwf	??_main^0,c
   300   0000C0  0E5E               	movlw	94
   301   0000C2                     u247:
   302   0000C2  2EE8               	decfsz	wreg,f,c
   303   0000C4  D7FE               	bra	u247
   304   0000C6  2E0D               	decfsz	??_main^0,f,c
   305   0000C8  D7FC               	bra	u247
   306   0000CA  2E0E               	decfsz	(??_main+1)^0,f,c
   307   0000CC  D7FA               	bra	u247
   308   0000CE                     
   309                           ;Interfacing_Sensors.c: 50:     value2 = Get_Value(tempval);
   310   0000CE  C023  F005         	movff	_tempval,Get_Value@input
   311   0000D2  C024  F006         	movff	_tempval+1,Get_Value@input+1
   312   0000D6  EC59  F020         	call	_Get_Value	;wreg free
   313   0000DA  C005  F021         	movff	?_Get_Value,_value2
   314   0000DE  C006  F022         	movff	?_Get_Value+1,_value2+1
   315   0000E2                     
   316                           ;Interfacing_Sensors.c: 51:     tempval--;
   317   0000E2  0623               	decf	_tempval^0,f,c
   318   0000E4  A0D8               	btfss	status,0,c
   319   0000E6  0624               	decf	(_tempval+1)^0,f,c
   320   0000E8                     
   321                           ;Interfacing_Sensors.c: 52:     Display_Value(value2);
   322   0000E8  C021  F003         	movff	_value2,Display_Value@display_input
   323   0000EC  C022  F004         	movff	_value2+1,Display_Value@display_input+1
   324   0000F0  EC32  F021         	call	_Display_Value	;wreg free
   325   0000F4                     
   326                           ;Interfacing_Sensors.c: 53:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   327   0000F4  0E0B               	movlw	11
   328   0000F6  6E0E               	movwf	(??_main+1)^0,c
   329   0000F8  0E26               	movlw	38
   330   0000FA  6E0D               	movwf	??_main^0,c
   331   0000FC  0E5E               	movlw	94
   332   0000FE                     u257:
   333   0000FE  2EE8               	decfsz	wreg,f,c
   334   000100  D7FE               	bra	u257
   335   000102  2E0D               	decfsz	??_main^0,f,c
   336   000104  D7FC               	bra	u257
   337   000106  2E0E               	decfsz	(??_main+1)^0,f,c
   338   000108  D7FA               	bra	u257
   339   00010A                     
   340                           ;Interfacing_Sensors.c: 54:     if (value1 == secretcode1 && value2 == secretcode2){
   341   00010A  0427               	decf	_value1^0,w,c
   342   00010C  1028               	iorwf	(_value1+1)^0,w,c
   343   00010E  A4D8               	btfss	status,2,c
   344   000110  EF8C  F000         	goto	u181
   345   000114  EF8E  F000         	goto	u180
   346   000118                     u181:
   347   000118  EFDA  F000         	goto	l951
   348   00011C                     u180:
   349   00011C  0421               	decf	_value2^0,w,c
   350   00011E  1022               	iorwf	(_value2+1)^0,w,c
   351   000120  A4D8               	btfss	status,2,c
   352   000122  EF95  F000         	goto	u191
   353   000126  EF97  F000         	goto	u190
   354   00012A                     u191:
   355   00012A  EFDA  F000         	goto	l951
   356   00012E                     u190:
   357   00012E                     
   358                           ;Interfacing_Sensors.c: 55:         PORTAbits.RA5 = 1;
   359   00012E  8ACA               	bsf	202,5,c	;volatile
   360   000130                     
   361                           ;Interfacing_Sensors.c: 56:         for (int count = 0; count <= 5; count++){
   362   000130  0E00               	movlw	0
   363   000132  6E10               	movwf	(main@count+1)^0,c
   364   000134  0E00               	movlw	0
   365   000136  6E0F               	movwf	main@count^0,c
   366   000138                     l98:
   367                           
   368                           ;Interfacing_Sensors.c: 57:             PORTBbits.RB2 = 1;
   369   000138  84CB               	bsf	203,2,c	;volatile
   370   00013A                     
   371                           ;Interfacing_Sensors.c: 58:             _delay((unsigned long)((1200)*(4000000/4000.0)))
      +                          ;
   372   00013A  0E07               	movlw	7
   373   00013C  6E0E               	movwf	(??_main+1)^0,c
   374   00013E  0E17               	movlw	23
   375   000140  6E0D               	movwf	??_main^0,c
   376   000142  0E6A               	movlw	106
   377   000144                     u267:
   378   000144  2EE8               	decfsz	wreg,f,c
   379   000146  D7FE               	bra	u267
   380   000148  2E0D               	decfsz	??_main^0,f,c
   381   00014A  D7FC               	bra	u267
   382   00014C  2E0E               	decfsz	(??_main+1)^0,f,c
   383   00014E  D7FA               	bra	u267
   384   000150  D000               	nop2	
   385   000152                     
   386                           ;Interfacing_Sensors.c: 60:             PORTBbits.RB2 = ~PORTBbits.RB2;
   387   000152  B4CB               	btfsc	203,2,c	;volatile
   388   000154  EFAE  F000         	goto	u201
   389   000158  EFB1  F000         	goto	u200
   390   00015C                     u201:
   391   00015C  0E01               	movlw	1
   392   00015E  EFB2  F000         	goto	u206
   393   000162                     u200:
   394   000162  0E00               	movlw	0
   395   000164                     u206:
   396   000164  0AFF               	xorlw	255
   397   000166  6E0D               	movwf	??_main^0,c
   398   000168  460D               	rlncf	??_main^0,f,c
   399   00016A  460D               	rlncf	??_main^0,f,c
   400   00016C  50CB               	movf	203,w,c	;volatile
   401   00016E  180D               	xorwf	??_main^0,w,c
   402   000170  0BFB               	andlw	-5
   403   000172  180D               	xorwf	??_main^0,w,c
   404   000174  6ECB               	movwf	203,c	;volatile
   405   000176                     
   406                           ;Interfacing_Sensors.c: 61:             _delay((unsigned long)((1200)*(4000000/4000.0)))
      +                          ;
   407   000176  0E07               	movlw	7
   408   000178  6E0E               	movwf	(??_main+1)^0,c
   409   00017A  0E17               	movlw	23
   410   00017C  6E0D               	movwf	??_main^0,c
   411   00017E  0E6A               	movlw	106
   412   000180                     u277:
   413   000180  2EE8               	decfsz	wreg,f,c
   414   000182  D7FE               	bra	u277
   415   000184  2E0D               	decfsz	??_main^0,f,c
   416   000186  D7FC               	bra	u277
   417   000188  2E0E               	decfsz	(??_main+1)^0,f,c
   418   00018A  D7FA               	bra	u277
   419   00018C  D000               	nop2	
   420   00018E                     
   421                           ;Interfacing_Sensors.c: 62:         }
   422   00018E  4A0F               	infsnz	main@count^0,f,c
   423   000190  2A10               	incf	(main@count+1)^0,f,c
   424   000192  BE10               	btfsc	(main@count+1)^0,7,c
   425   000194  EFD5  F000         	goto	u211
   426   000198  5010               	movf	(main@count+1)^0,w,c
   427   00019A  E109               	bnz	u210
   428   00019C  0E06               	movlw	6
   429   00019E  5C0F               	subwf	main@count^0,w,c
   430   0001A0  A0D8               	btfss	status,0,c
   431   0001A2  EFD5  F000         	goto	u211
   432   0001A6  EFD7  F000         	goto	u210
   433   0001AA                     u211:
   434   0001AA  EF9C  F000         	goto	l98
   435   0001AE                     u210:
   436   0001AE                     
   437                           ;Interfacing_Sensors.c: 63:         PORTAbits.RA5 = 0;
   438   0001AE  9ACA               	bcf	202,5,c	;volatile
   439                           
   440                           ;Interfacing_Sensors.c: 64:     }
   441   0001B0  EF0C  F001         	goto	l103
   442   0001B4                     l951:
   443                           
   444                           ;Interfacing_Sensors.c: 66:         for (int count = 0; count <= 5; count++) {
   445   0001B4  0E00               	movlw	0
   446   0001B6  6E12               	movwf	(main@count_224+1)^0,c
   447   0001B8  0E00               	movlw	0
   448   0001BA  6E11               	movwf	main@count_224^0,c
   449   0001BC                     l957:
   450                           
   451                           ;Interfacing_Sensors.c: 67:             PORTBbits.RB3 = ~PORTBbits.RB3;
   452   0001BC  B6CB               	btfsc	203,3,c	;volatile
   453   0001BE  EFE3  F000         	goto	u221
   454   0001C2  EFE6  F000         	goto	u220
   455   0001C6                     u221:
   456   0001C6  0E01               	movlw	1
   457   0001C8  EFE7  F000         	goto	u226
   458   0001CC                     u220:
   459   0001CC  0E00               	movlw	0
   460   0001CE                     u226:
   461   0001CE  0AFF               	xorlw	255
   462   0001D0  6E0D               	movwf	??_main^0,c
   463   0001D2  460D               	rlncf	??_main^0,f,c
   464   0001D4  460D               	rlncf	??_main^0,f,c
   465   0001D6  460D               	rlncf	??_main^0,f,c
   466   0001D8  50CB               	movf	203,w,c	;volatile
   467   0001DA  180D               	xorwf	??_main^0,w,c
   468   0001DC  0BF7               	andlw	-9
   469   0001DE  180D               	xorwf	??_main^0,w,c
   470   0001E0  6ECB               	movwf	203,c	;volatile
   471   0001E2                     
   472                           ;Interfacing_Sensors.c: 68:             _delay((unsigned long)((500)*(4000000/4000.0)));
   473   0001E2  0E03               	movlw	3
   474   0001E4  6E0E               	movwf	(??_main+1)^0,c
   475   0001E6  0E8A               	movlw	138
   476   0001E8  6E0D               	movwf	??_main^0,c
   477   0001EA  0E56               	movlw	86
   478   0001EC                     u287:
   479   0001EC  2EE8               	decfsz	wreg,f,c
   480   0001EE  D7FE               	bra	u287
   481   0001F0  2E0D               	decfsz	??_main^0,f,c
   482   0001F2  D7FC               	bra	u287
   483   0001F4  2E0E               	decfsz	(??_main+1)^0,f,c
   484   0001F6  D7FA               	bra	u287
   485                           
   486                           ;Interfacing_Sensors.c: 69:         }
   487   0001F8  4A11               	infsnz	main@count_224^0,f,c
   488   0001FA  2A12               	incf	(main@count_224+1)^0,f,c
   489   0001FC  BE12               	btfsc	(main@count_224+1)^0,7,c
   490   0001FE  EF0A  F001         	goto	u231
   491   000202  5012               	movf	(main@count_224+1)^0,w,c
   492   000204  E109               	bnz	u230
   493   000206  0E06               	movlw	6
   494   000208  5C11               	subwf	main@count_224^0,w,c
   495   00020A  A0D8               	btfss	status,0,c
   496   00020C  EF0A  F001         	goto	u231
   497   000210  EF0C  F001         	goto	u230
   498   000214                     u231:
   499   000214  EFDE  F000         	goto	l957
   500   000218                     u230:
   501   000218                     l103:
   502   000218  EF57  F020         	goto	start
   503   00021C                     __end_of_main:
   504                           	callstack 0
   505                           
   506 ;; *************** function _Init *****************
   507 ;; Defined at:
   508 ;;		line 20 in file "./Initialization.h"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text1
   537   00418A                     __ptext1:
   538                           	callstack 0
   539   00418A                     _Init:
   540                           	callstack 29
   541   00418A                     
   542                           ;./Initialization.h: 23:         PORTA = 0x0;
   543   00418A  0E00               	movlw	0
   544   00418C  6ECA               	movwf	202,c	;volatile
   545                           
   546                           ;./Initialization.h: 24:         ANSELA = 0x0;
   547   00418E  0E00               	movlw	0
   548   004190  013A               	movlb	58	; () banked
   549   004192  6F40               	movwf	64,b	;volatile
   550                           
   551                           ;./Initialization.h: 25:         LATA = 0x0;
   552   004194  0E00               	movlw	0
   553   004196  6EBA               	movwf	186,c	;volatile
   554                           
   555                           ;./Initialization.h: 26:         TRISA = 0x03;
   556   004198  0E03               	movlw	3
   557   00419A  6EC2               	movwf	194,c	;volatile
   558                           
   559                           ;./Initialization.h: 28:         PORTA = 0x0;
   560   00419C  0E00               	movlw	0
   561   00419E  6ECA               	movwf	202,c	;volatile
   562                           
   563                           ;./Initialization.h: 31:         PORTB = 0x0;
   564   0041A0  0E00               	movlw	0
   565   0041A2  6ECB               	movwf	203,c	;volatile
   566                           
   567                           ;./Initialization.h: 32:         ANSELB = 0x0;
   568   0041A4  0E00               	movlw	0
   569   0041A6  6F50               	movwf	80,b	;volatile
   570                           
   571                           ;./Initialization.h: 33:         LATB = 0x0;
   572   0041A8  0E00               	movlw	0
   573   0041AA  6EBB               	movwf	187,c	;volatile
   574                           
   575                           ;./Initialization.h: 34:         TRISB = 0x03;
   576   0041AC  0E03               	movlw	3
   577   0041AE  6EC3               	movwf	195,c	;volatile
   578                           
   579                           ;./Initialization.h: 35:         WPUB = 0x03;
   580   0041B0  0E03               	movlw	3
   581   0041B2  6F51               	movwf	81,b	;volatile
   582                           
   583                           ;./Initialization.h: 36:         PORTB = 0x0;
   584   0041B4  0E00               	movlw	0
   585   0041B6  6ECB               	movwf	203,c	;volatile
   586                           
   587                           ;./Initialization.h: 39:         PORTD = 0x0;
   588   0041B8  0E00               	movlw	0
   589   0041BA  6ECD               	movwf	205,c	;volatile
   590                           
   591                           ;./Initialization.h: 40:         ANSELD = 0x0;
   592   0041BC  0E00               	movlw	0
   593   0041BE  6F70               	movwf	112,b	;volatile
   594                           
   595                           ;./Initialization.h: 41:         LATD = 0x0;
   596   0041C0  0E00               	movlw	0
   597   0041C2  6EBD               	movwf	189,c	;volatile
   598                           
   599                           ;./Initialization.h: 42:         TRISD = 0x0;
   600   0041C4  0E00               	movlw	0
   601   0041C6  6EC5               	movwf	197,c	;volatile
   602   0041C8                     
   603                           ; BSR set to: 58
   604                           ;./Initialization.h: 45:         IPR1bits.INT0IP = 1;
   605   0041C8  0139               	movlb	57	; () banked
   606   0041CA  8181               	bsf	129,0,b	;volatile
   607   0041CC                     
   608                           ; BSR set to: 57
   609                           ;./Initialization.h: 46:         PIE1bits.INT0IE = 1;
   610   0041CC  8191               	bsf	145,0,b	;volatile
   611   0041CE                     
   612                           ; BSR set to: 57
   613                           ;./Initialization.h: 47:         PIR1bits.INT0IF = 0;
   614   0041CE  91A1               	bcf	161,0,b	;volatile
   615                           
   616                           ;./Initialization.h: 48:         INTCON0 = 0xE7;
   617   0041D0  0EE7               	movlw	231
   618   0041D2  6ED2               	movwf	210,c	;volatile
   619                           
   620                           ;./Initialization.h: 49:         IVTBASEU = 0x00;
   621   0041D4  0E00               	movlw	0
   622   0041D6  6ED7               	movwf	215,c	;volatile
   623                           
   624                           ;./Initialization.h: 50:         IVTBASEH = 0x40;
   625   0041D8  0E40               	movlw	64
   626   0041DA  6ED6               	movwf	214,c	;volatile
   627                           
   628                           ;./Initialization.h: 51:         IVTBASEL = 0x08;
   629   0041DC  0E08               	movlw	8
   630   0041DE  6ED5               	movwf	213,c	;volatile
   631   0041E0                     
   632                           ; BSR set to: 57
   633   0041E0  0012               	return		;funcret
   634   0041E2                     __end_of_Init:
   635                           	callstack 0
   636                           
   637 ;; *************** function _Get_Value *****************
   638 ;; Defined at:
   639 ;;		line 40 in file "./Functions.h"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  input           2    4[COMRAM] int 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  temp2           2   10[COMRAM] int 
   644 ;;  temp1           2    8[COMRAM] int 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2    4[COMRAM] int 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   657 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   658 ;;Total ram usage:        8 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 2
   661 ;; This function calls:
   662 ;;		_Display_Value
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text2
   669   0040B2                     __ptext2:
   670                           	callstack 0
   671   0040B2                     _Get_Value:
   672                           	callstack 28
   673   0040B2                     
   674                           ;./Functions.h: 42:     int temp2 = 1;
   675   0040B2  0E00               	movlw	0
   676   0040B4  6E0C               	movwf	(Get_Value@temp2+1)^0,c
   677   0040B6  0E01               	movlw	1
   678   0040B8  6E0B               	movwf	Get_Value@temp2^0,c
   679   0040BA                     
   680                           ;./Functions.h: 44:         temp1 = 0;
   681   0040BA  0E00               	movlw	0
   682   0040BC  6E0A               	movwf	(Get_Value@temp1+1)^0,c
   683   0040BE  0E00               	movlw	0
   684   0040C0  6E09               	movwf	Get_Value@temp1^0,c
   685   0040C2                     
   686                           ;./Functions.h: 45:         if (input == 0) {
   687   0040C2  5005               	movf	Get_Value@input^0,w,c
   688   0040C4  1006               	iorwf	(Get_Value@input+1)^0,w,c
   689   0040C6  A4D8               	btfss	status,2,c
   690   0040C8  EF68  F020         	goto	u131
   691   0040CC  EF6A  F020         	goto	u130
   692   0040D0                     u131:
   693   0040D0  EF96  F020         	goto	l901
   694   0040D4                     u130:
   695   0040D4  EF89  F020         	goto	l66
   696   0040D8                     l891:
   697                           
   698                           ;./Functions.h: 47:                 Display_Value(temp1);
   699   0040D8  C009  F003         	movff	Get_Value@temp1,Display_Value@display_input
   700   0040DC  C00A  F004         	movff	Get_Value@temp1+1,Display_Value@display_input+1
   701   0040E0  EC32  F021         	call	_Display_Value	;wreg free
   702   0040E4                     
   703                           ;./Functions.h: 48:                 if (PORTAbits.RA0 == 1) {
   704   0040E4  A0CA               	btfss	202,0,c	;volatile
   705   0040E6  EF77  F020         	goto	u141
   706   0040EA  EF79  F020         	goto	u140
   707   0040EE                     u141:
   708   0040EE  EF88  F020         	goto	l68
   709   0040F2                     u140:
   710   0040F2                     
   711                           ;./Functions.h: 49:                     temp1++;
   712   0040F2  4A09               	infsnz	Get_Value@temp1^0,f,c
   713   0040F4  2A0A               	incf	(Get_Value@temp1+1)^0,f,c
   714   0040F6                     
   715                           ;./Functions.h: 50:                     _delay((unsigned long)((2000)*(4000000/4000.0)))
      +                          ;
   716   0040F6  0E0B               	movlw	11
   717   0040F8  6E08               	movwf	(??_Get_Value+1)^0,c
   718   0040FA  0E26               	movlw	38
   719   0040FC  6E07               	movwf	??_Get_Value^0,c
   720   0040FE  0E5E               	movlw	94
   721   004100                     u297:
   722   004100  2EE8               	decfsz	wreg,f,c
   723   004102  D7FE               	bra	u297
   724   004104  2E07               	decfsz	??_Get_Value^0,f,c
   725   004106  D7FC               	bra	u297
   726   004108  2E08               	decfsz	(??_Get_Value+1)^0,f,c
   727   00410A  D7FA               	bra	u297
   728                           
   729                           ;./Functions.h: 51:                 }
   730   00410C  EF89  F020         	goto	l66
   731   004110                     l68:
   732   004110  0000               	nop		;# 
   733   004112                     l66:
   734                           
   735                           ;./Functions.h: 46:             while(PORTBbits.RB1 == 1) {
   736   004112  B2CB               	btfsc	203,1,c	;volatile
   737   004114  EF8E  F020         	goto	u151
   738   004118  EF90  F020         	goto	u150
   739   00411C                     u151:
   740   00411C  EF6C  F020         	goto	l891
   741   004120                     u150:
   742   004120                     
   743                           ;./Functions.h: 56:             return temp1;
   744   004120  C009  F005         	movff	Get_Value@temp1,?_Get_Value
   745   004124  C00A  F006         	movff	Get_Value@temp1+1,?_Get_Value+1
   746   004128  EFC4  F020         	goto	l71
   747   00412C                     l901:
   748                           
   749                           ;./Functions.h: 59:             temp2 = 0;
   750   00412C  0E00               	movlw	0
   751   00412E  6E0C               	movwf	(Get_Value@temp2+1)^0,c
   752   004130  0E00               	movlw	0
   753   004132  6E0B               	movwf	Get_Value@temp2^0,c
   754                           
   755                           ;./Functions.h: 60:             while(PORTBbits.RB1 == 1) {
   756   004134  EFB9  F020         	goto	l73
   757   004138                     l903:
   758                           
   759                           ;./Functions.h: 61:                 Display_Value(temp2);
   760   004138  C00B  F003         	movff	Get_Value@temp2,Display_Value@display_input
   761   00413C  C00C  F004         	movff	Get_Value@temp2+1,Display_Value@display_input+1
   762   004140  EC32  F021         	call	_Display_Value	;wreg free
   763   004144                     
   764                           ;./Functions.h: 62:                 if (PORTAbits.RA1 == 1) {
   765   004144  A2CA               	btfss	202,1,c	;volatile
   766   004146  EFA7  F020         	goto	u161
   767   00414A  EFA9  F020         	goto	u160
   768   00414E                     u161:
   769   00414E  EFB8  F020         	goto	l75
   770   004152                     u160:
   771   004152                     
   772                           ;./Functions.h: 63:                     temp2++;
   773   004152  4A0B               	infsnz	Get_Value@temp2^0,f,c
   774   004154  2A0C               	incf	(Get_Value@temp2+1)^0,f,c
   775   004156                     
   776                           ;./Functions.h: 64:                     _delay((unsigned long)((2000)*(4000000/4000.0)))
      +                          ;
   777   004156  0E0B               	movlw	11
   778   004158  6E08               	movwf	(??_Get_Value+1)^0,c
   779   00415A  0E26               	movlw	38
   780   00415C  6E07               	movwf	??_Get_Value^0,c
   781   00415E  0E5E               	movlw	94
   782   004160                     u307:
   783   004160  2EE8               	decfsz	wreg,f,c
   784   004162  D7FE               	bra	u307
   785   004164  2E07               	decfsz	??_Get_Value^0,f,c
   786   004166  D7FC               	bra	u307
   787   004168  2E08               	decfsz	(??_Get_Value+1)^0,f,c
   788   00416A  D7FA               	bra	u307
   789                           
   790                           ;./Functions.h: 65:                 }
   791   00416C  EFB9  F020         	goto	l73
   792   004170                     l75:
   793   004170  0000               	nop		;# 
   794   004172                     l73:
   795                           
   796                           ;./Functions.h: 60:             while(PORTBbits.RB1 == 1) {
   797   004172  B2CB               	btfsc	203,1,c	;volatile
   798   004174  EFBE  F020         	goto	u171
   799   004178  EFC0  F020         	goto	u170
   800   00417C                     u171:
   801   00417C  EF9C  F020         	goto	l903
   802   004180                     u170:
   803   004180                     
   804                           ;./Functions.h: 70:             return temp2;
   805   004180  C00B  F005         	movff	Get_Value@temp2,?_Get_Value
   806   004184  C00C  F006         	movff	Get_Value@temp2+1,?_Get_Value+1
   807   004188                     l71:
   808   004188  0012               	return		;funcret
   809   00418A                     __end_of_Get_Value:
   810                           	callstack 0
   811                           
   812 ;; *************** function _Display_Value *****************
   813 ;; Defined at:
   814 ;;		line 75 in file "./Functions.h"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  display_inpu    2    2[COMRAM] int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_Get_Value
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844   004264                     __ptext3:
   845                           	callstack 0
   846   004264                     _Display_Value:
   847                           	callstack 28
   848   004264                     
   849                           ;./Functions.h: 76:     PORTD = LED_value[display_input];
   850   004264  5003               	movf	Display_Value@display_input^0,w,c
   851   004266  0F13               	addlw	low _LED_value
   852   004268  6ED9               	movwf	fsr2l,c
   853   00426A  6ADA               	clrf	fsr2h,c
   854   00426C  50DF               	movf	indf2,w,c
   855   00426E  6ECD               	movwf	205,c	;volatile
   856   004270  0012               	return		;funcret
   857   004272                     __end_of_Display_Value:
   858                           	callstack 0
   859                           
   860 ;; *************** function _interrupt1_ISR *****************
   861 ;; Defined at:
   862 ;;		line 31 in file "./Functions.h"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		Interrupt level 2
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text4
   890   004224                     __ptext4:
   891                           	callstack 0
   892   004224                     _interrupt1_ISR:
   893                           	callstack 28
   894   004224                     
   895                           ;./Functions.h: 32:     if(PIR1bits.INT0IF == 1) {
   896   004224  0139               	movlb	57	; () banked
   897   004226  A1A1               	btfss	161,0,b	;volatile
   898   004228  EF18  F021         	goto	i2u6_41
   899   00422C  EF1A  F021         	goto	i2u6_40
   900   004230                     i2u6_41:
   901   004230  EF2A  F021         	goto	i2l61
   902   004234                     i2u6_40:
   903   004234                     
   904                           ; BSR set to: 57
   905                           ;./Functions.h: 33:     PORTBbits.RB4 = 1;
   906   004234  88CB               	bsf	203,4,c	;volatile
   907   004236                     
   908                           ; BSR set to: 57
   909                           ;./Functions.h: 34:     _delay((unsigned long)((2500)*(4000000/4000.0)));
   910   004236  0E0D               	movlw	13
   911   004238  6E02               	movwf	(??_interrupt1_ISR+1)^0,c
   912   00423A  0EAF               	movlw	175
   913   00423C  6E01               	movwf	??_interrupt1_ISR^0,c
   914   00423E  0EB6               	movlw	182
   915   004240                     i2u31_47:
   916   004240  2EE8               	decfsz	wreg,f,c
   917   004242  D7FE               	bra	i2u31_47
   918   004244  2E01               	decfsz	??_interrupt1_ISR^0,f,c
   919   004246  D7FC               	bra	i2u31_47
   920   004248  2E02               	decfsz	(??_interrupt1_ISR+1)^0,f,c
   921   00424A  D7FA               	bra	i2u31_47
   922   00424C  D000               	nop2	
   923   00424E                     
   924                           ;./Functions.h: 35:     PORTBbits.RB4 = 0;
   925   00424E  98CB               	bcf	203,4,c	;volatile
   926   004250                     
   927                           ;./Functions.h: 36:     PIR1bits.INT0IF = 0;
   928   004250  0139               	movlb	57	; () banked
   929   004252  91A1               	bcf	161,0,b	;volatile
   930   004254                     i2l61:
   931                           
   932                           ; BSR set to: 57
   933   004254  0011               	retfie		f
   934   004256                     __end_of_interrupt1_ISR:
   935                           	callstack 0
   936                           
   937                           ;
   938                           ; H/W Interrupt Vector Table @ 0x4008
   939                           ;
   940                           
   941                           	psect	ivt0x4008
   942   004008                     __pivt0x4008:
   943                           	callstack 0
   944   004008                     ivt0x4008_base:
   945                           	callstack 0
   946                           
   947                           ; Vector 0 : SWINT
   948   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
   949                           
   950                           ; Vector 1 : HLVD
   951   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
   952                           
   953                           ; Vector 2 : OSF
   954   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
   955                           
   956                           ; Vector 3 : CSW
   957   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
   958                           
   959                           ; Vector 4 : NVM
   960   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
   961                           
   962                           ; Vector 5 : SCAN
   963   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
   964                           
   965                           ; Vector 6 : CRC
   966   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
   967                           
   968                           ; Vector 7 : IOC
   969   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
   970                           
   971                           ; Vector 8 : INT0
   972   004018  1089               	dw	_interrupt1_ISR shr (0+2)
   973                           
   974                           ; Vector 9 : ZCD
   975   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
   976                           
   977                           ; Vector 10 : AD
   978   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
   979                           
   980                           ; Vector 11 : ADT
   981   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
   982                           
   983                           ; Vector 12 : CMP1
   984   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
   985                           
   986                           ; Vector 13 : SMT1
   987   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
   988                           
   989                           ; Vector 14 : SMT1PRA
   990   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
   991                           
   992                           ; Vector 15 : SMT1PRW
   993   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
   994                           
   995                           ; Vector 16 : DMA1SCNT
   996   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
   997                           
   998                           ; Vector 17 : DMA1DCNT
   999   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1000                           
  1001                           ; Vector 18 : DMA1OR
  1002   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1003                           
  1004                           ; Vector 19 : DMA1A
  1005   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1006                           
  1007                           ; Vector 20 : SPI1RX
  1008   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1009                           
  1010                           ; Vector 21 : SPI1TX
  1011   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1012                           
  1013                           ; Vector 22 : SPI1
  1014   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1015                           
  1016                           ; Vector 23 : I2C1RX
  1017   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1018                           
  1019                           ; Vector 24 : I2C1TX
  1020   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1021                           
  1022                           ; Vector 25 : I2C1
  1023   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1024                           
  1025                           ; Vector 26 : I2C1E
  1026   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1027                           
  1028                           ; Vector 27 : U1RX
  1029   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1030                           
  1031                           ; Vector 28 : U1TX
  1032   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1033                           
  1034                           ; Vector 29 : U1E
  1035   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1036                           
  1037                           ; Vector 30 : U1
  1038   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1039                           
  1040                           ; Vector 31 : TMR0
  1041   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1042                           
  1043                           ; Vector 32 : TMR1
  1044   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1045                           
  1046                           ; Vector 33 : TMR1G
  1047   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1048                           
  1049                           ; Vector 34 : TMR2
  1050   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1051                           
  1052                           ; Vector 35 : CCP1
  1053   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1054                           
  1055                           ; Vector 36 : Undefined
  1056   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1057                           
  1058                           ; Vector 37 : NCO1
  1059   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1060                           
  1061                           ; Vector 38 : CWG1
  1062   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1063                           
  1064                           ; Vector 39 : CLC1
  1065   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1066                           
  1067                           ; Vector 40 : INT1
  1068   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1069                           
  1070                           ; Vector 41 : CMP2
  1071   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1072                           
  1073                           ; Vector 42 : DMA2SCNT
  1074   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1075                           
  1076                           ; Vector 43 : DMA2DCNT
  1077   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1078                           
  1079                           ; Vector 44 : DMA2OR
  1080   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1081                           
  1082                           ; Vector 45 : DMA2A
  1083   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1084                           
  1085                           ; Vector 46 : I2C2RX
  1086   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1087                           
  1088                           ; Vector 47 : I2C2TX
  1089   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1090                           
  1091                           ; Vector 48 : I2C2
  1092   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1093                           
  1094                           ; Vector 49 : I2C2E
  1095   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1096                           
  1097                           ; Vector 50 : U2RX
  1098   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1099                           
  1100                           ; Vector 51 : U2TX
  1101   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1102                           
  1103                           ; Vector 52 : U2E
  1104   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1105                           
  1106                           ; Vector 53 : U2
  1107   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1108                           
  1109                           ; Vector 54 : TMR3
  1110   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1111                           
  1112                           ; Vector 55 : TMR3G
  1113   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1114                           
  1115                           ; Vector 56 : TMR4
  1116   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1117                           
  1118                           ; Vector 57 : CCP2
  1119   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1120                           
  1121                           ; Vector 58 : Undefined
  1122   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1123                           
  1124                           ; Vector 59 : CWG2
  1125   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1126                           
  1127                           ; Vector 60 : CLC2
  1128   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1129                           
  1130                           ; Vector 61 : INT2
  1131   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  1132                           
  1133                           ; Vector 62 : Undefined
  1134   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1135                           
  1136                           ; Vector 63 : Undefined
  1137   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1138                           
  1139                           ; Vector 64 : Undefined
  1140   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1141                           
  1142                           ; Vector 65 : Undefined
  1143   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1144                           
  1145                           ; Vector 66 : Undefined
  1146   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1147                           
  1148                           ; Vector 67 : Undefined
  1149   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1150                           
  1151                           ; Vector 68 : Undefined
  1152   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1153                           
  1154                           ; Vector 69 : Undefined
  1155   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1156                           
  1157                           ; Vector 70 : TMR5
  1158   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1159                           
  1160                           ; Vector 71 : TMR5G
  1161   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1162                           
  1163                           ; Vector 72 : TMR6
  1164   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1165                           
  1166                           ; Vector 73 : CCP3
  1167   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1168                           
  1169                           ; Vector 74 : CWG3
  1170   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1171                           
  1172                           ; Vector 75 : CLC3
  1173   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1174                           
  1175                           ; Vector 76 : Undefined
  1176   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1177                           
  1178                           ; Vector 77 : Undefined
  1179   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1180                           
  1181                           ; Vector 78 : Undefined
  1182   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1183                           
  1184                           ; Vector 79 : Undefined
  1185   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1186                           
  1187                           ; Vector 80 : CCP4
  1188   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1189                           
  1190                           ; Vector 81 : CLC4
  1191   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1192   0040AC                     ivt0x4008_undefint:
  1193                           	callstack 0
  1194   0040AC  00FF               	reset	
  1195                           
  1196                           	psect	smallconst
  1197   002000                     __psmallconst:
  1198                           	callstack 0
  1199   002000  00                 	db	0
  1200   002001  00                 	db	0	; dummy byte at the end
  1201   000000                     
  1202                           	psect	rparam
  1203   000000                     
  1204                           	psect	config
  1205                           
  1206                           ;Config register CONFIG1L @ 0x300000
  1207                           ;	External Oscillator Selection
  1208                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1209                           ;	Reset Oscillator Selection
  1210                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1211   300000                     	org	3145728
  1212   300000  F8                 	db	248
  1213                           
  1214                           ;Config register CONFIG1H @ 0x300001
  1215                           ;	Clock out Enable bit
  1216                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1217                           ;	PRLOCKED One-Way Set Enable bit
  1218                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1219                           ;	Clock Switch Enable bit
  1220                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1221                           ;	Fail-Safe Clock Monitor Enable bit
  1222                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1223   300001                     	org	3145729
  1224   300001  FF                 	db	255
  1225                           
  1226                           ;Config register CONFIG2L @ 0x300002
  1227                           ;	MCLR Enable bit
  1228                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1229                           ;	Power-up timer selection bits
  1230                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1231                           ;	Multi-vector enable bit
  1232                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1233                           ;	IVTLOCK bit One-way set enable bit
  1234                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1235                           ;	Low Power BOR Enable bit
  1236                           ;	LPBOREN = OFF, ULPBOR disabled
  1237                           ;	Brown-out Reset Enable bits
  1238                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1239   300002                     	org	3145730
  1240   300002  FF                 	db	255
  1241                           
  1242                           ;Config register CONFIG2H @ 0x300003
  1243                           ;	Brown-out Reset Voltage Selection bits
  1244                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1245                           ;	ZCD Disable bit
  1246                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1247                           ;	PPSLOCK bit One-Way Set Enable bit
  1248                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1249                           ;	Stack Full/Underflow Reset Enable bit
  1250                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1251                           ;	Debugger Enable bit
  1252                           ;	DEBUG = OFF, Background debugger disabled
  1253                           ;	Extended Instruction Set Enable bit
  1254                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1255   300003                     	org	3145731
  1256   300003  FF                 	db	255
  1257                           
  1258                           ;Config register CONFIG3L @ 0x300004
  1259                           ;	WDT Period selection bits
  1260                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1261                           ;	WDT operating mode
  1262                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1263   300004                     	org	3145732
  1264   300004  9F                 	db	159
  1265                           
  1266                           ;Config register CONFIG3H @ 0x300005
  1267                           ;	WDT Window Select bits
  1268                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1269                           ;	WDT input clock selector
  1270                           ;	WDTCCS = SC, Software Control
  1271   300005                     	org	3145733
  1272   300005  FF                 	db	255
  1273                           
  1274                           ;Config register CONFIG4L @ 0x300006
  1275                           ;	Boot Block Size selection bits
  1276                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1277                           ;	Boot Block enable bit
  1278                           ;	BBEN = OFF, Boot block disabled
  1279                           ;	Storage Area Flash enable bit
  1280                           ;	SAFEN = OFF, SAF disabled
  1281                           ;	Application Block write protection bit
  1282                           ;	WRTAPP = OFF, Application Block not write protected
  1283   300006                     	org	3145734
  1284   300006  FF                 	db	255
  1285                           
  1286                           ;Config register CONFIG4H @ 0x300007
  1287                           ;	Boot Block Write Protection bit
  1288                           ;	WRTB = OFF, Boot Block not write-protected
  1289                           ;	Configuration Register Write Protection bit
  1290                           ;	WRTC = OFF, Configuration registers not write-protected
  1291                           ;	Data EEPROM Write Protection bit
  1292                           ;	WRTD = OFF, Data EEPROM not write-protected
  1293                           ;	SAF Write protection bit
  1294                           ;	WRTSAF = OFF, SAF not Write Protected
  1295                           ;	Low Voltage Programming Enable bit
  1296                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1297   300007                     	org	3145735
  1298   300007  FF                 	db	255
  1299                           
  1300                           ;Config register CONFIG5L @ 0x300008
  1301                           ;	PFM and Data EEPROM Code Protection bit
  1302                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1303   300008                     	org	3145736
  1304   300008  FF                 	db	255
  1305                           
  1306                           ;Config register CONFIG5H @ 0x300009
  1307                           ;	unspecified, using default values
  1308   300009                     	org	3145737
  1309   300009  FF                 	db	255
  1310                           tosu	equ	0x3FFF
  1311                           tosh	equ	0x3FFE
  1312                           tosl	equ	0x3FFD
  1313                           stkptr	equ	0x3FFC
  1314                           pclatu	equ	0x3FFB
  1315                           pclath	equ	0x3FFA
  1316                           pcl	equ	0x3FF9
  1317                           tblptru	equ	0x3FF8
  1318                           tblptrh	equ	0x3FF7
  1319                           tblptrl	equ	0x3FF6
  1320                           tablat	equ	0x3FF5
  1321                           prodh	equ	0x3FF4
  1322                           prodl	equ	0x3FF3
  1323                           indf0	equ	0x3FEF
  1324                           postinc0	equ	0x3FEE
  1325                           postdec0	equ	0x3FED
  1326                           preinc0	equ	0x3FEC
  1327                           plusw0	equ	0x3FEB
  1328                           fsr0h	equ	0x3FEA
  1329                           fsr0l	equ	0x3FE9
  1330                           wreg	equ	0x3FE8
  1331                           indf1	equ	0x3FE7
  1332                           postinc1	equ	0x3FE6
  1333                           postdec1	equ	0x3FE5
  1334                           preinc1	equ	0x3FE4
  1335                           plusw1	equ	0x3FE3
  1336                           fsr1h	equ	0x3FE2
  1337                           fsr1l	equ	0x3FE1
  1338                           bsr	equ	0x3FE0
  1339                           indf2	equ	0x3FDF
  1340                           postinc2	equ	0x3FDE
  1341                           postdec2	equ	0x3FDD
  1342                           preinc2	equ	0x3FDC
  1343                           plusw2	equ	0x3FDB
  1344                           fsr2h	equ	0x3FDA
  1345                           fsr2l	equ	0x3FD9
  1346                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Get_Value
    _Get_Value->_Display_Value

Critical Paths under _interrupt1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _interrupt1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _interrupt1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _interrupt1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _interrupt1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _interrupt1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _interrupt1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _interrupt1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _interrupt1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _interrupt1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _interrupt1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _interrupt1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _interrupt1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _interrupt1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _interrupt1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _interrupt1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _interrupt1_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1012
                                             12 COMRAM     6     6      0
                      _Display_Value
                          _Get_Value
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Value                                            8     6      2     594
                                              4 COMRAM     8     6      2
                      _Display_Value
 ---------------------------------------------------------------------------------
 (2) _Display_Value                                        2     0      2     326
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupt1_ISR                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_Value
   _Get_Value
     _Display_Value
   _Init

 _interrupt1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      84        0.0%
BITBIGSFRlhlhh     549      0       0      77        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       181      0       0      83        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllhhh      9E      0       0      80        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      28       1       42.1%
BITBIGSFRhhhh       28      0       0      69        0.0%
BITBIGSFRlhlhl      1E      0       0      78        0.0%
BITBIGSFRllhhl       F      0       0      81        0.0%
BITBIGSFRllhl        F      0       0      82        0.0%
BITBIGSFRlhll        F      0       0      79        0.0%
BITBIGSFRlhhhh       4      0       0      73        0.0%
BITBIGSFRlhhlh       4      0       0      75        0.0%
BITBIGSFRhhl         4      0       0      71        0.0%
BITBIGSFRhhhl        2      0       0      70        0.0%
BITBIGSFRlhhhl       1      0       0      74        0.0%
BITBIGSFRlhhll       1      0       0      76        0.0%
BITBIGSFRhl          1      0       0      72        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      30        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 29 23:50:34 2024

    __end_of_interrupt1_ISR 4256                          l51 41E0                          l70 4120  
                        l71 4188                          l64 40BA                          l73 4172  
                        l82 4270                          l66 4112                          l75 4170  
                        l68 4110                          l77 4180                          l98 0138  
                        l99 01AE                         l103 0218                         l901 412C  
                       l903 4138                         l911 0090                         l905 4144  
                       l921 00CE                         l913 0094                         l907 4152  
                       l931 011C                         l923 00E2                         l915 00A8  
                       l909 4156                         l941 013A                         l933 012E  
                       l925 00E8                         l917 00AC                         l783 418A  
                       l943 0152                         l935 0130                         l951 01B4  
                       l927 00F4                         l919 00B8                         l881 4264  
                       l785 41C8                         l961 01FC                         l945 0176  
                       l929 010A                         l891 40D8                         l787 41CC  
                       l947 018E                         l893 40E4                         l885 40B2  
                       l789 41CE                         l957 01BC                         l949 0192  
                       l895 40F2                         l887 40C2                         l959 01E2  
                       l897 40F6                         u200 0162                         u201 015C  
                       u130 40D4                         u210 01AE                         u131 40D0  
                       u211 01AA                         u140 40F2                         u220 01CC  
                       u141 40EE                         u221 01C6                         u150 4120  
                       u230 0218                         u206 0164                         u151 411C  
                       u231 0214                         u160 4152                         u161 414E  
                       u170 4180                         u226 01CE                         u171 417C  
                       u307 4160                         u180 011C                         u181 0118  
                       u190 012E                         u191 012A                         u247 00C2  
                       u257 00FE                         u267 0144                         u277 0180  
                       u287 01EC                         u297 4100                         wreg 3FE8  
                      _LATA 3FBA                        _LATB 3FBB                        _LATD 3FBD  
                      i2l61 4254                        _WPUB 3A51                        _Init 418A  
                      _main 0090                        _temp 0025                        fsr2h 3FDA  
                      indf2 3FDF                        fsr1l 3FE1                        fsr2l 3FD9  
                      start 40AE                ___param_bank 0000             ?_interrupt1_ISR 0001  
                     ?_Init 0001                       ?_main 0001                       i2l821 4234  
                     i2l823 4236                       i2l825 424E                       i2l827 4250  
                     i2l819 4224                       _PORTA 3FCA                       _PORTB 3FCB  
                     _PORTD 3FCD                       _TRISA 3FC2                       _TRISB 3FC3  
                     _TRISD 3FC5                       tablat 3FF5                       status 3FD8  
           __initialization 41E2                __end_of_Init 41E2                __end_of_main 021C  
                    ??_Init 0003                      ??_main 000D               __activetblptr 0000  
            Get_Value@input 0005              Get_Value@temp1 0009              Get_Value@temp2 000B  
             main@count_224 0011                      _ANSELA 3A40                      _ANSELB 3A50  
                    _ANSELD 3A70                      i2u6_40 4234                      i2u6_41 4230  
                    _value1 0027                      _value2 0021                      isa$std 0001  
              __pdataCOMRAM 0013                __mediumconst 0000                      tblptrh 3FF7  
                    tblptrl 3FF6                      tblptru 3FF8                __p_main_text 0090  
Display_Value@display_input 0003                  __accesstop 0060     __end_of__initialization 421C  
             ___rparam_used 0001           __end_of_Get_Value 418A              __pcstackCOMRAM 0001  
                __pnvCOMRAM 0027            ??_interrupt1_ISR 0001                     IVTBASEH 3FD6  
                   IVTBASEL 3FD5                     IVTBASEU 3FD7       __end_of_Display_Value 4272  
                   _INTCON0 3FD2                     i2u31_47 4240                     __Hparam 0000  
                   __Lparam 0000                __psmallconst 2000                     __pcinit 41E2  
                   __ramtop 2000               ivt0x4008_base 4008                     __ptext1 418A  
                   __ptext2 40B2                     __ptext3 4264                     __ptext4 4224  
                   _tempval 0023        end_of_initialization 421C                   _LED_value 0013  
                   postdec1 3FE5                     postinc0 3FEE                   _PORTAbits 3FCA  
                 _PORTBbits 3FCB                _main_absaddr 0090                   _Get_Value 40B2  
             __pidataCOMRAM 4256         start_initialization 41E2                  ?_Get_Value 0005  
               __pbssCOMRAM 0021                 __pivt0x4008 4008                 __smallconst 2000  
                  _IPR1bits 3981                    _PIE1bits 3991                    _IVTBASEH 3FD6  
                  _IVTBASEL 3FD5                    _IVTBASEU 3FD7                    _PIR1bits 39A1  
         ivt0x4008_undefint 40AC                 ??_Get_Value 0007                   main@count 000F  
                 copy_data0 41F6                    __Hrparam 0000                    __Lrparam 0000  
             _Display_Value 4264                    isa$xinst 0000              ?_Display_Value 0003  
               _secretcode1 001F                 _secretcode2 001D                    intlevel2 0000  
            _interrupt1_ISR 4224             ??_Display_Value 0005  
